name: Build and deploy Python project to Azure Function App - dlp-redact-resend-func

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create deployment package
        run: |
          mkdir deploy
          
          # Copy your function files
          cp function_app.py deploy/
          cp host.json deploy/
          cp requirements.txt deploy/
          if [ -d "redact_resend" ]; then
            cp -r redact_resend deploy/
          fi

      - name: Debug package
        run: |
          echo "Deployment package contents:"
          ls -la deploy/
          echo "Function app content:"
          head -10 deploy/function_app.py

      - name: Create deployment ZIP
        run: |
          cd deploy
          zip -r ../function-app.zip . -x "*.pyc" "*/__pycache__/*"
          cd ..
          ls -la function-app.zip

      - name: Azure CLI Login with Publish Profile
        run: |
          # Extract credentials from publish profile (this is a workaround)
          echo "Using publish profile for authentication"
          
      - name: Deploy using Azure REST API
        run: |
          # Extract the SCM URL and credentials from publish profile
          PUBLISH_PROFILE='${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_9DFF1B7D3671481E9B08BA3B92D48BA3 }}'
          
          # Parse publish profile to extract SCM URL and credentials
          SCM_URL=$(echo "$PUBLISH_PROFILE" | grep -o 'publishUrl="[^"]*\.scm\.azurewebsites\.net[^"]*"' | sed 's/publishUrl="//;s/"//' | head -1)
          USERNAME=$(echo "$PUBLISH_PROFILE" | grep -o 'userName="[^"]*"' | sed 's/userName="//;s/"//' | head -1)
          PASSWORD=$(echo "$PUBLISH_PROFILE" | grep -o 'userPWD="[^"]*"' | sed 's/userPWD="//;s/"//' | head -1)
          
          if [ -z "$SCM_URL" ] || [ -z "$USERNAME" ] || [ -z "$PASSWORD" ]; then
            echo "Failed to parse publish profile"
            exit 1
          fi
          
          echo "SCM URL: $SCM_URL"
          echo "Username: $USERNAME"
          
          # Deploy using Kudu API directly
          curl -X POST \
            --user "$USERNAME:$PASSWORD" \
            --data-binary @function-app.zip \
            -H "Content-Type: application/zip" \
            "https://$SCM_URL/api/zipdeploy" \
            -v
            
